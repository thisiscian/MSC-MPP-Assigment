#!/bin/bash
#$ -cwd -V -N mpp_cw -e output_files/logs/error-$JOB_NAME-$JOB_ID -o output_files/logs/$JOB_NAME-$JOB_ID

LIMIT_TYPE=0
LIMIT=100
INPUT_FOLDER=../input_files
INPUT_FILE=edge192x128.pgm 
#INPUT_FILE=edge256x192.pgm 
#INPUT_FILE=edge512x384.pgm  
#INPUT_FILE=edge768x768.pgm
#INPUT_FILE=edge1024x1408.pgm 

FOR_MIN=1
FOR_MAX=16
FOR_INCREMENT=1

OUTPUT_FOLDER=../output_files
SERIAL="./serial $LIMIT_TYPE $LIMIT $INPUT_FOLDER $INPUT_FILE $OUTPUT_FOLDER"
PARALLEL="./parallel $LIMIT_TYPE $LIMIT $INPUT_FOLDER $INPUT_FILE $OUTPUT_FOLDER"

if [[ x$1x == xCOMx ]]; then
make &>/dev/null
cd bin
	echo "#$INPUT_FILE -- $LIMIT"
	echo "#SERIAL"
  echo -e "#threads\titerations\tmax_change\treal time"
	printf "##0\t"
	$SERIAL	| awk '{RS="\n\n";} /Program did /{printf $3"\t" ;}  /Greatest change/{printf $7"\t";} /Time taken/printf $4"\n";}'
	echo

	echo "#PARALLEL"
  echo -e "#threads\titerations\tmax_change\treal time"
	for (( N=$FOR_MIN; N<=$FOR_MAX;N+=$FOR_INCREMENT )); do
		printf $N"\t"
		mpiexec -n $N $PARALLEL | awk '{RS="\n\n";} /Program did /{printf $3"\t" ;}  /Greatest change/{printf $7"\t";} /Time taken/ printf $4"\n";}'
	done

	cd ../output_files
	for (( N=$FOR_MIN; N<=$FOR_MAX;N+=$FOR_INCREMENT )); do
		if [[ $(diff $INPUT_FILE\_reconstruct\_p$N\_i$LIMIT.pgm $INPUT_FILE\_reconstruct\_serial\_i$LIMIT.pgm) ]]; then
			echo "#ERROR: File \""$INPUT_FILE"_reconstruct_p"$N"_i"$LIMIT".pgm\" does not match the serial version"
		fi
	done 
else
	qsub -pe mpi 16 $0 COM
fi
